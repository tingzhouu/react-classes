{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Loader","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay","src_Loader","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAEMA,EAAe,CACnBC,OAAQ,CAACC,KAAM,yBAA0BC,SAAU,OACnDC,OAAQ,CAACF,KAAM,uBAAwBC,SAAU,cAWnD,IAaeE,EAbO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAICK,EAENZ,EAAaS,GAA/BP,EAFwBU,EAExBV,KAAMC,EAFkBS,EAElBT,SAEb,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAChCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKd,EAAL,6BACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKd,EAAL,gCCrBZe,EAAS,SAACZ,GACd,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBV,EAAMa,WAK7CD,EAAOE,aAAe,CACpBD,QAAS,cAGID,QCRTG,oNAEJC,MAAQ,CAAEf,IAAK,KAAMgB,aAAc,uFAEf,IAAAC,EAAAC,KAClBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GACEN,EAAKO,SAAS,CAAExB,IAAKuB,EAASE,OAAOC,YAEvC,SAAAC,GACEV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,oDAMtC,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IAClCM,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,eAG5BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAEvCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAI9BkB,KAAKH,MAAMC,cAAiBE,KAAKH,MAAMf,SAA5C,EAEIM,EAAAC,EAAAC,cAACqB,EAAD,CAAQjB,QAAQ,yEAOpB,OACEM,KAAKY,uBApCOC,IAAMC,YAyCxBC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAAQC,SAASC,cAAc","file":"static/js/main.9e4b9b90.chunk.js","sourcesContent":["import React from \"react\";\n\nconst seasonConfig = {\n  summer: {text: \"Let's hit the beach :)\", iconName: \"sun\"},\n  winter: {text: \"Burr it is chilly :(\", iconName: \"snowflake\"}\n}\n\nfunction getSeason(lat, month) {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat > 0 ? \"winter\" : \"summer\";\n  }\n}\n\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const {text, iconName} = seasonConfig[season];\n  \n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`${iconName} icon massive icon-left`}></i>\n      <h1>{text}</h1>\n      <i className={`${iconName} icon massive icon-right`}></i>\n    </div>\n  );\n}\n\nexport default SeasonDisplay;","import React from \"react\";\n\nconst Loader = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nLoader.defaultProps = {\n  message: \"Loading...\"\n}\n\nexport default Loader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\"\nimport \"./SeasonDisplay.css\";\n\nclass App extends React.Component {\n\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({ lat: position.coords.latitude }); //uses setState function to update latitude\n      },\n      err => {\n        this.setState({ errorMessage: err.message});\n      }\n    );\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return (\n        <SeasonDisplay lat={this.state.lat}/>\n      );\n    }\n\n    if (!this.state.errorMessage && !this.state.lat) {\n      return (\n        <Loader message=\"Attempting to load your location...\"/>\n      )\n    }\n  }\n\n  //defining render function\n  render() {\n    return (\n      this.renderContent()\n    );\n  }\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}